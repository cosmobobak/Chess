. . . . . . p .
. . p . . . r .
. p . . R p . .
. . . . . P . .
. . . . . . p P
. . n . . . P .
r . . . . K . R
0.5349984169006348
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . R p . .
. . . . . P . .
. . . . . . p P
. . n . K . P .
r . . . . . . R
5.627999544143677
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . R p . .
. . . . . P . .
. . . . . . p P
. . n . K . P .
. . . . . . . r
3.618058681488037
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . R p . .
. . . . . P . .
. . . K . . p P
. . n . . . P .
. . . . . . . r
3.5329740047454834
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . R p . .
. . . . . P . .
. . . K . . p P
. . . . . . P .
. . . . n . . r
1.210996389389038
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . R p . .
. . . . . P . .
. . . . . . p P
. . . . K . P .
. . . . n . . r
2.178022623062134
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . R p . .
. . . . . P . .
. . . . . . p P
. . . . K . n .
. . . . . . . r
3.2096824645996094
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . . R . .
. . . . . P . .
. . . . . . p P
. . . . K . n .
. . . . . . . r
3.044025421142578
. . . k . . . .
. . . . . . p .
. . p . . . r .
. p . . . R . .
. . . . . P . .
. . . . . . p r
. . . . K . n .
. . . . . . . .
3.5600476264953613
. . . k . . . .
. . . . . R p .
. . p . . . r .
. p . . . . . .
. . . . . P . .
. . . . . . p r
. . . . K . n .
. . . . . . . .
3.8880629539489746
. . . k . . . .
. . . . . R p .
. . p . . . r .
. p . . . . . .
. . . . . P . .
. . . . . . p .
. . . . K . n r
. . . . . . . .
3.3690288066864014
. . . k . . . .
. . . . . R p .
. . p . . . r .
. p . . . . . .
. . . . . P . .
. . . . . . p .
. . . . . . n r
. . . . . K . .
2.270031452178955
. . . k . . . .
. . . . . R p .
. . p . . . r .
. p . . . . . .
. . . . . P . .
. . . . n . p .
. . . . . . . r
. . . . . K . .
0.9070339202880859
. . . k . . . .
. . . . . R p .
. . p . . . r .
. p . . . . . .
. . . . . P . .
. . . . n . p .
. . . . . . . r
. . . . . . K .
4.077982425689697
. . . k . . . .
. . . . . R p .
. . p . . . r .
. p . . . . . .
. . . . . P . .
. . . . n . p .
. . . . . . r .
. . . . . . K .
0.25197505950927734
. . . k . . . .
. . . . . R p .
. . p . . . r .
. p . . . . . .
. . . . . P . .
. . . . n . p .
. . . . . . r .
. . . . . . . K
2.0800299644470215
. . . k . . . .
. . . . . R p .
. . p . . . . r
. p . . . . . .
. . . . . P . .
. . . . n . p .
. . . . . . r .
. . . . . . . K
True WINS ON TURN 194
time elapsed while thinking: 5785.88392663002

[Move.from_uci('g1f3'), Move.from_uci('f7f5'), Move.from_uci('f3d4'), Move.from_uci('d7d6'), Move.from_uci('e2e3'), Move.from_uci('g8f6'), Move.from_uci('b1c3'), Move.from_uci('c8d7'), Move.from_uci('f1b5'), Move.from_uci('d7b5'), Move.from_uci('c3b5'), Move.from_uci('d8d7'), Move.from_uci('b5c3'), Move.from_uci('b8c6'), Move.from_uci('d1f3'), Move.from_uci('c6d4'), Move.from_uci('e3d4'), Move.from_uci('d7e6'), Move.from_uci('f3e2'), Move.from_uci('e6e2'), Move.from_uci('e1e2'), Move.from_uci('e7e5'), Move.from_uci('d4e5'), Move.from_uci('d6e5'), Move.from_uci('c3b5'), Move.from_uci('e8c8'), Move.from_uci('b5a7'), Move.from_uci('c8b8'), Move.from_uci('a7b5'), Move.from_uci('c7c6'), Move.from_uci('b5a3'), Move.from_uci('d8d4'), Move.from_uci('a3b1'), Move.from_uci('d4g4'), Move.from_uci('e2f1'), Move.from_uci('f8d6'), Move.from_uci('b1c3'), Move.from_uci('g4d4'), Move.from_uci('d2d3'), Move.from_uci('f6d5'), Move.from_uci('c1d2'), Move.from_uci('h8e8'), Move.from_uci('f1g1'), Move.from_uci('d6c5'), Move.from_uci('a1e1'), Move.from_uci('c5d6'), Move.from_uci('a2a3'), Move.from_uci('d6c5'), Move.from_uci('b2b4'), Move.from_uci('c5d6'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8g8'), Move.from_uci('e1d1'), Move.from_uci('g8e8'), Move.from_uci('d1e1'), Move.from_uci('h7h6'), Move.from_uci('e1d1'), Move.from_uci('h6h5'), Move.from_uci('d1e1'), Move.from_uci('h5h4'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8g8'), Move.from_uci('e1d1'), Move.from_uci('g8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8c8'), Move.from_uci('d1e1'), Move.from_uci('c8g8'), Move.from_uci('e1d1'), Move.from_uci('g8f8'), Move.from_uci('d1e1'), Move.from_uci('f8g8'), Move.from_uci('e1d1'), Move.from_uci('g8f8'), Move.from_uci('d1e1'), Move.from_uci('f8g8'), Move.from_uci('e1d1'), Move.from_uci('g8f8'), Move.from_uci('d1e1'), Move.from_uci('f8c8'), Move.from_uci('e1d1'), Move.from_uci('c8f8'), Move.from_uci('d1e1'), Move.from_uci('f8c8'), Move.from_uci('e1d1'), Move.from_uci('c8c7'), Move.from_uci('d1e1'), Move.from_uci('c7c8'), Move.from_uci('e1d1'), Move.from_uci('c8c7'), Move.from_uci('d1e1'), Move.from_uci('c7c8'), Move.from_uci('e1d1'), Move.from_uci('c8c7'), Move.from_uci('d1e1'), Move.from_uci('c7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7c7'), Move.from_uci('e1d1'), Move.from_uci('c7c8'), Move.from_uci('d1e1'), Move.from_uci('c8c7'), Move.from_uci('e1d1'), Move.from_uci('c7c8'), Move.from_uci('d1e1'), Move.from_uci('c8c7'), Move.from_uci('e1d1'), Move.from_uci('c7c8'), Move.from_uci('d1e1'), Move.from_uci('c8c7'), Move.from_uci('e1d1'), Move.from_uci('c7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7c7'), Move.from_uci('d1e1'), Move.from_uci('b7b5'), Move.from_uci('e1d1'), Move.from_uci('c7c8'), Move.from_uci('d1e1'), Move.from_uci('c8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8e8'), Move.from_uci('e1d1'), Move.from_uci('e8h8'), Move.from_uci('d1e1'), Move.from_uci('h8g8'), Move.from_uci('e1d1'), Move.from_uci('g8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8e8'), Move.from_uci('d1e1'), Move.from_uci('e8h8'), Move.from_uci('e1d1'), Move.from_uci('h8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8g8'), Move.from_uci('d1e1'), Move.from_uci('g8f8'), Move.from_uci('e1d1'), Move.from_uci('f8c8'), Move.from_uci('d1e1'), Move.from_uci('c8g8'), Move.from_uci('e1d1'), Move.from_uci('g8f8'), Move.from_uci('d1e1'), Move.from_uci('f8g8'), Move.from_uci('e1d1'), Move.from_uci('g8f8'), Move.from_uci('d1e1'), Move.from_uci('f8g8'), Move.from_uci('e1d1'), Move.from_uci('g8f8'), Move.from_uci('d1e1'), Move.from_uci('f8c8'), Move.from_uci('e1d1'), Move.from_uci('c8f8'), Move.from_uci('d1e1'), Move.from_uci('f8c8'), Move.from_uci('e1d1'), Move.from_uci('c8c7'), Move.from_uci('d1e1'), Move.from_uci('c7c8'), Move.from_uci('e1d1'), Move.from_uci('c8c7'), Move.from_uci('d1e1'), Move.from_uci('c7c8'), Move.from_uci('e1d1'), Move.from_uci('c8c7'), Move.from_uci('d1e1'), Move.from_uci('c7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7f7'), Move.from_uci('e1d1'), Move.from_uci('f7d7'), Move.from_uci('d1e1'), Move.from_uci('d7c7'), Move.from_uci('e1d1'), Move.from_uci('c7c8'), Move.from_uci('d1e1'), Move.from_uci('c8c7'), Move.from_uci('e1d1'), Move.from_uci('c7c8'), Move.from_uci('d1e1'), Move.from_uci('c8c7'), Move.from_uci('e1d1'), Move.from_uci('c7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7f7'), Move.from_uci('d1e1'), Move.from_uci('f7d7'), Move.from_uci('e1d1'), Move.from_uci('d7c7'), Move.from_uci('d1e1'), Move.from_uci('c7b7'), Move.from_uci('e1d1'), Move.from_uci('b7b6'), Move.from_uci('d1e1'), Move.from_uci('b6b7'), Move.from_uci('e1d1'), Move.from_uci('b7b6'), Move.from_uci('d1e1'), Move.from_uci('b6b7'), Move.from_uci('e1d1'), Move.from_uci('b7b6'), Move.from_uci('d1e1'), Move.from_uci('b6b7'), Move.from_uci('e1d1'), Move.from_uci('b7b6'), Move.from_uci('d1e1'), Move.from_uci('b6a6'), Move.from_uci('c3e2'), Move.from_uci('d4g4'), Move.from_uci('h2h3'), Move.from_uci('g4g6'), Move.from_uci('d3d4'), Move.from_uci('a6a3'), Move.from_uci('d4e5'), Move.from_uci('d6e5'), Move.from_uci('e2g3'), Move.from_uci('h4g3'), Move.from_uci('e1e5'), Move.from_uci('a3a1'), Move.from_uci('d2e1'), Move.from_uci('d5b4'), Move.from_uci('e5e8'), Move.from_uci('b8c7'), Move.from_uci('f2f4'), Move.from_uci('b4c2'), Move.from_uci('e8e7'), Move.from_uci('c7d8'), Move.from_uci('e7e5'), Move.from_uci('c2e1'), Move.from_uci('g1f1'), Move.from_uci('e1c2'), Move.from_uci('f1e2'), Move.from_uci('a1h1'), Move.from_uci('e2d3'), Move.from_uci('c2e1'), Move.from_uci('d3e2'), Move.from_uci('e1g2'), Move.from_uci('e5f5'), Move.from_uci('h1h3'), Move.from_uci('f5f7'), Move.from_uci('h3h2'), Move.from_uci('e2f1'), Move.from_uci('g2e3'), Move.from_uci('f1g1'), Move.from_uci('h2g2'), Move.from_uci('g1h1'), Move.from_uci('g6h6')]
Wrote profile results to Viridithas.py.lprof
Timer unit: 1e-07 s

Total time: 737.809 s
File: Viridithas.py
Function: orderedMoves at line 60

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    60                                           @profile
    61                                           def orderedMoves(board):
    62   2043149   10333178.0      5.1      0.1      first = []
    63   2043149    7225876.0      3.5      0.1      last = []
    64
    65  62048294 5854270823.0     94.4     79.3      for move in board.legal_moves:
    66  60005145 1219365222.0     20.3     16.5          if board.is_capture(move):
    67   6024083   27321597.0      4.5      0.4              first.append(move)
    68                                                   else:
    69  53981062  246531529.0      4.6      3.3              last.append(move)
    70
    71   2043149   13042733.0      6.4      0.2      return first + last

Total time: 5640.72 s
File: Viridithas.py
Function: negamax_killer at line 74

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    74                                           @profile
    75                                           def negamax_killer(node, depth, a, b, colour):
    76  21037412 2445472268.0    116.2      4.3      if depth == 0 or node.is_game_over():
    77  18994263 35221779525.0   1854.3    62.4          return colour * evaluate(node,depth)
    78   2043149   12506665.0      6.1      0.0      value = -1337000.0
    79   2043149 7940280471.0   3886.3     14.1      moves = orderedMoves(node)
    80  21704408  109664238.0      5.1      0.2      for move in moves:
    81  21025663 8607263112.0    409.4     15.3          node.push(move)
    82  21025663  396170166.0     18.8      0.7          value = max(value, -negamax_killer(node, depth-1, -b, -a, -colour))
    83  21025663  173339119.0      8.2      0.3          a = max(a, value)
    84  21025663 1366758024.0     65.0      2.4          node.pop()
    85  21025663  117794392.0      5.6      0.2          if a >= b:
    86   1364404    7406954.0      5.4      0.0              break
    87   2043149    8762383.0      4.3      0.0      return value

Total time: 0 s
File: Viridithas.py
Function: negamax at line 89

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    89                                           @profile
    90                                           def negamax(node, depth, a, b, colour):
    91                                               if depth == 0 or node.is_game_over():
    92                                                   return colour * evaluate(node,depth)
    93                                               value = -1337000.0
    94                                               for move in node.legal_moves:
    95                                                   node.push(move)
    96                                                   value = max(value, -negamax(node, depth-1, -b, -a, -colour))
    97                                                   a = max(a, value)
    98                                                   node.pop()
    99                                                   if a >= b:
   100                                                       break
   101                                               return value

Total time: 5785.94 s
File: Viridithas.py
Function: pushMove at line 103

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   103                                           @profile
   104                                           def pushMove(board,depth,debug):
   105       386      17933.0     46.5      0.0      start = time.time()
   106       386       5821.0     15.1      0.0      if board.turn:
   107       193       1559.0      8.1      0.0          turn = 1
   108                                               else:
   109       193       1359.0      7.0      0.0          turn = -1
   110       386       2985.0      7.7      0.0      moves = []
   111     12135    1362388.0    112.3      0.0      for move in board.legal_moves:
   112     11749      72767.0      6.2      0.0          moves.append(move)
   113       386       2169.0      5.6      0.0      boards = []
   114       386       1858.0      4.8      0.0      moveRatings = []
   115       386       1655.0      4.3      0.0      heuristicRatings = []
   116     12135    2041583.0    168.2      0.0      for move in board.legal_moves:
   117     11749    5448585.0    463.7      0.0          board.push(move)
   118
   119     11749 57635070750.0 4905529.9   99.6          moveRatings.append(negamax_killer(board, depth, -1337000, 1337000, turn))
   120                                                   #trash = negamax_killer(board, depth, -1337000, 1337000, turn)
   121
   122     11749  213272888.0  18152.4      0.4          boards.append(board.copy())
   123
   124     11749    1015100.0     86.4      0.0          board.pop()
   125       386       2034.0      5.3      0.0      if debug:
   126                                                   for move,moveRating in zip(moves,moveRatings):
   127                                                       print(move,moveRating)
   128       386     195253.0    505.8      0.0      board.push(moves[moveRatings.index(min(moveRatings))])
   129       386      10931.0     28.3      0.0      end = time.time()
   130                                               global whiteTime
   131       386     850996.0   2204.7      0.0      print(end-start)
   132       386      18960.0     49.1      0.0      whiteTime += (end-start)
   133       386       3603.0      9.3      0.0      return boards,moveRatings


C:\Users\Cosmo\Documents\GitHub\Chess>